import openai
from dotenv import load_dotenv
import os

load_dotenv()  # .env 파일을 로드함

api_key = os.getenv("OPENAI_API_KEY")
client = openai.OpenAI(api_key=api_key)

def generate_script_feedback(script):
    """발표 스크립트를 바탕으로 평가 및 피드백 생성"""

    
    prompt = f"""
        당신은 전문 스피치 코치입니다. 아래 발표 스크립트를 읽고 다음 항목에 따라 구체적인 피드백을 제공해주세요:

        1. 문법 및 어휘: 문법 오류나 어색한 표현이 있는지 지적하고 자연스러운 표현으로 고쳐주세요.  
        2. 논리적 흐름: 발표 내용이 논리적으로 자연스럽게 연결되는지, 개연성이 있는지를 평가해주세요.  
        3. 강조 및 전달력: 중요한 메시지가 효과적으로 강조되었는지, 청중에게 설득력 있게 전달되는지를 평가해주세요.  
        4. 개선 제안: 위 항목을 종합하여 스크립트를 어떻게 보완하면 좋을지 구체적으로 제안해주세요.

        [발표 스크립트]
        {script}
        """

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": """당신은 유능한 스피치 코칭 전문가입니다. """},
              {"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content

def edited_script_feedback(original_script, original_feedback, edited_script):
    """수정된 스크립트가 기존 피드백을 어떻게 반영했는지 평가"""

    prompt = f"""
당신은 전문 스피치 코치입니다. 사용자가 아래의 발표 스크립트를 기존 피드백을 바탕으로 수정했습니다.  
수정본을 평가할 때 다음을 중심으로 피드백을 제공해주세요:

1. 사용자가 원본 피드백의 어떤 내용을 실제로 반영했는지 구체적으로 설명해주세요.  
2. 반영한 부분이 얼마나 효과적으로 개선되었는지 평가해주세요.  
3. 여전히 반영되지 않았거나 부족한 부분이 있다면 지적해주세요.  
4. 수정본을 추가로 보완할 수 있는 방향이 있다면 제안해주세요.

[원본 스크립트]
'''
{original_script}
'''

[GPT가 제공한 피드백]
'''
{original_feedback}
'''

[사용자가 수정한 스크립트]
'''
{edited_script}
'''

"""

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "당신은 유능한 스피치 코칭 전문가입니다."},
            {"role": "user", "content": prompt}
        ]
    )

    return response.choices[0].message.content



# GPT-4o를 활용한 발표 평가 및 피드백 생성
def to_llm(originalStt, atmosphere, purpose, scale, audience, deadline):
    """녹음본 내용을 바탕으로 평가 및 피드백 생성"""

    prompt = f"""
     [평가 기준]
    - 분위기: {atmosphere}
    - 목적: {purpose}
    - 규모: {scale}
    - 청중: {audience}
    - 제한 시간: {deadline}

    [발표 내용]  
    '''  
    {originalStt}  
    '''  
    이 내용을 바탕으로 피드백을 작성해주세요.
    """

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": """당신은 유능한 스피치 코칭 전문가입니다. 피드백의 예시는 다음과 같습니다. 
[개선 피드백 예시]
    이번 발표는 논리적이고 유기적인 흐름을 중심으로 구성되어 있으며, 청중이 이해하기 쉽도록 체계적으로 정리된 발표였습니다. 서론에서는 발표의 목적을 명확하게 전달하며 관심을 유도했고 본론에서는 핵심 내용을 단계적으로 설명하여 발표의 논리적 전개가 안정적으로 이루어졌습니다. 또한, 결론 부분에서는 발표의 주요 내용을 요약하며 마무리를 지었기 때문에 발표 구조 자체는 적절하게 구성되었습니다.

다만, 본론 내에서 주요 내용 간의 연결이 다소 단조롭게 이루어진 부분이 있었습니다. 정보 전달을 목적으로 하는 발표에서는 청중이 핵심 내용을 명확하게 이해할 수 있도록 논리적 연결성을 강화하는 것이 중요합니다. 특히, 본론의 각 항목을 소개할 때 단순한 나열보다는 "앞서 설명한 내용을 바탕으로", "이제 다음 내용을 살펴보겠습니다. "등의 전환 문구를 적극적으로 활용하여 흐름을 자연스럽게 이어갈 필요가 있습니다.

이번 발표는 공식적인 분위기 속에서 대규모 청중을 대상으로 한 정보 전달형 발표였습니다. 공식적인 발표에서는 발표자의 신뢰도가 중요하기 때문에 현재 발표처럼 차분하고 객관적인 어조를 유지한 점은 긍정적입니다. 그러나 일부 핵심 내용이 강조되지 않아 전달력이 다소 약해질 수 있습니다. 이를 보완하기 위해 숫자, 통계, 핵심 키워드를 강조하는 반복적인 표현을 활용하면 발표의 명확성을 높일 수 있습니다.

또한, 청중의 수준이 일반 대중이라는 점을 고려할 때 설명 방식에 약간의 보완이 필요합니다. 발표 내용이 다소 전문적인 경우 개념을 소개할 때 청중이 쉽게 이해할 수 있도록 실생활 예시나 비유를 추가하면 발표의 효과가 더욱 높아질 것입니다. 현재 발표는 비교적 이해하기 쉬운 언어로 구성되어 있으나 일부 개념이 직관적으로 이해되지 않을 가능성이 있기 때문에 더 친숙한 사례나 유사한 개념을 활용하여 설명을 보완하는 것이 추천됩니다.

또한, 대규모 청중을 대상으로 한 발표에서는 정보가 너무 빠르게 전달될 경우 청중이 내용을 따라가기 어려울 수 있습니다. 이번 발표는 15분이라는 제한된 시간 내에서 진행되었지만 후반부로 갈수록 정보 전달 속도가 증가하는 경향이 있었습니다. 이를 보완하기 위해 각 핵심 내용을 요약하고 청중이 이해했는지 확인하는 전략을 활용하면 효과적입니다. 예를 들어, "지금까지 말씀드린 내용을 간단히 정리하면…"과 같은 문장을 추가하여 주요 내용을 한 번 더 강조하는 방식이 유용할 수 있습니다.

총평 요약

- 본론 내 전환 문구를 활용하여 논리적 흐름을 자연스럽게 연결
- 공식적인 분위기 유지와 함께 주요 키워드 및 핵심 내용을 강조
- 대규모 청중을 고려하여 핵심 내용을 요약하고 반복 강조하는 전략 적용
- 일반 대중을 위한 쉬운 예시나 비유 활용으로 이해도 향상
- 15분 발표 시간을 효과적으로 활용하여 결론에서 핵심 메시지를 요약"""},
              {"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content



def to_llm2(originalStt):
    """녹음본 내용을 바탕으로 평가 및 피드백 생성"""

    prompt = f"""
    [발표 내용]  
    '''  
    {originalStt}  
    '''  
    이 내용을 바탕으로 피드백을 작성해주세요.
    """

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": """당신은 유능한 스피치 코칭 전문가입니다. 피드백의 예시는 다음과 같습니다. 
[개선 피드백 예시]
    이번 발표는 논리적이고 유기적인 흐름을 중심으로 구성되어 있으며, 청중이 이해하기 쉽도록 체계적으로 정리된 발표였습니다. 서론에서는 발표의 목적을 명확하게 전달하며 관심을 유도했고 본론에서는 핵심 내용을 단계적으로 설명하여 발표의 논리적 전개가 안정적으로 이루어졌습니다. 또한, 결론 부분에서는 발표의 주요 내용을 요약하며 마무리를 지었기 때문에 발표 구조 자체는 적절하게 구성되었습니다.

다만, 본론 내에서 주요 내용 간의 연결이 다소 단조롭게 이루어진 부분이 있었습니다. 정보 전달을 목적으로 하는 발표에서는 청중이 핵심 내용을 명확하게 이해할 수 있도록 논리적 연결성을 강화하는 것이 중요합니다. 특히, 본론의 각 항목을 소개할 때 단순한 나열보다는 "앞서 설명한 내용을 바탕으로", "이제 다음 내용을 살펴보겠습니다. "등의 전환 문구를 적극적으로 활용하여 흐름을 자연스럽게 이어갈 필요가 있습니다.

총평 요약

- 본론 내 전환 문구를 활용하여 논리적 흐름을 자연스럽게 연결
- 공식적인 분위기 유지와 함께 주요 키워드 및 핵심 내용을 강조
"""},
              {"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content
def topics(originalStt):
    """녹음본 내용을 바탕으로 평가 및 피드백 생성"""

    prompt = f"""
    [피드백 내용]
    '''  
    {originalStt}
    '''  
    이 피드백을 토대로 발표자가 해당 발표를 연습하기 위한 발표 주제 3가지를 파이썬 리스트 형식으로 반환하세요.
    """

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": "응답을 파이썬 리스트 형식으로 반환하세요."},
              {"role": "user", "content": prompt}]
    )

    return response.choices[0].message.content
